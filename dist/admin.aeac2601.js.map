{"mappings":"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","sources":["<anon>","src/js/admin.js"],"sourcesContent":["var $89fbbdbcfc71305c$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const token = localStorage.getItem(\"token\");\n    console.log(token);\n    if (!token) window.location.href = \"/login.html\";\n    $89fbbdbcfc71305c$var$fetchMenuItems(token);\n    $89fbbdbcfc71305c$var$fetchBookings(token);\n    document.getElementById(\"logoutButton\").addEventListener(\"click\", ()=>{\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/login.html\";\n    });\n});\ndocument.getElementById(\"addNewItemButton\").addEventListener(\"click\", ()=>{\n    document.getElementById(\"menuFormContainer\").style.display = \"block\";\n    document.getElementById(\"menuForm\").reset();\n    document.getElementById(\"menuId\").value = \"\";\n});\ndocument.getElementById(\"addNewBookingButton\").addEventListener(\"click\", ()=>{\n    document.getElementById(\"bookingFormContainer\").style.display = \"block\";\n    document.getElementById(\"bookingForm\").reset();\n    document.getElementById(\"bookingId\").value = \"\"; // Se till att bookingId sätts till ett tomt värde\n});\ndocument.getElementById(\"menuForm\").addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const menuId1 = document.getElementById(\"menuId\").value;\n    const name = document.getElementById(\"name\").value;\n    const description = document.getElementById(\"description\").value;\n    const category = document.getElementById(\"category\").value;\n    const token = localStorage.getItem(\"token\");\n    const menuItem = {\n        name: name,\n        description: description,\n        category: category\n    };\n    let url = \"https://backend-yzf1.onrender.com/api/menu\";\n    let method = \"POST\";\n    if (menuId1) {\n        url += `/${menuId1}`;\n        method = \"PUT\";\n    }\n    const response = await fetch(url, {\n        method: method,\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(menuItem)\n    });\n    if (response.ok) {\n        $89fbbdbcfc71305c$var$fetchMenuItems(token);\n        document.getElementById(\"menuFormContainer\").style.display = \"none\";\n        $89fbbdbcfc71305c$var$showNotification(menuId1 ? `${name} har uppdaterats!` : `${name} har lagts till!`);\n    } else console.error(\"Failed to save menu item:\", response.status);\n});\ndocument.getElementById(\"bookingForm\").addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const bookingId = document.getElementById(\"bookingId\").value;\n    const name = document.getElementById(\"bookingName\").value;\n    const phone = document.getElementById(\"bookingPhone\").value;\n    const email = document.getElementById(\"bookingEmail\").value;\n    const date = document.getElementById(\"bookingDate\").value;\n    const time = document.getElementById(\"bookingTime\").value;\n    const guests = document.getElementById(\"bookingGuests\").value;\n    const specialRequests = document.getElementById(\"bookingSpecialRequests\").value;\n    const token = localStorage.getItem(\"token\");\n    //Kombinerar datum och tid för att konvertera till ISO 1601-format som databasen har för att kunna skapa bokningar frn gränssnittet\n    const datetime = new Date(`${date}T${time}:00Z`).toISOString();\n    console.log(datetime);\n    const booking = {\n        name: name,\n        phone: phone,\n        email: email,\n        date: datetime,\n        time: time,\n        guests: guests,\n        specialRequests: specialRequests\n    };\n    console.log(booking);\n    let url = \"https://backend-yzf1.onrender.com/api/bookings\";\n    let method = \"POST\";\n    if (bookingId) {\n        url += `/${bookingId}`;\n        method = \"PUT\";\n    }\n    const response = await fetch(url, {\n        method: method,\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(booking)\n    });\n    if (response.ok) {\n        $89fbbdbcfc71305c$var$fetchBookings(token);\n        document.getElementById(\"bookingFormContainer\").style.display = \"none\";\n        $89fbbdbcfc71305c$var$showNotification(bookingId ? \"Booking updated successfully!\" : \"New booking added!\");\n    } else {\n        const errorData = await response.json();\n        console.error(\"Failed to save booking:\", response.status);\n        console.error(\"Error details:\", errorData);\n    }\n});\ndocument.getElementById(\"cancelButton\").addEventListener(\"click\", ()=>{\n    document.getElementById(\"menuFormContainer\").style.display = \"none\";\n});\ndocument.getElementById(\"cancelBookingButton\").addEventListener(\"click\", ()=>{\n    document.getElementById(\"bookingFormContainer\").style.display = \"none\";\n});\nasync function $89fbbdbcfc71305c$var$fetchMenuItems(token) {\n    const response = await fetch(\"https://backend-yzf1.onrender.com/api/menu\", {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    });\n    if (response.ok) {\n        const menuItems = await response.json();\n        $89fbbdbcfc71305c$var$renderMenuItems(menuItems);\n    } else console.error(\"Failed to fetch menu items:\", response.status);\n}\nfunction $89fbbdbcfc71305c$var$renderMenuItems(menuItems) {\n    const menuDiv = document.getElementById(\"menuItems\");\n    menuDiv.innerHTML = \"\";\n    menuItems.forEach((item)=>{\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.id = `menuItem-${item._id}`; // Unikt ID för varje menyalternativ\n        itemDiv.classList.add(\"menu-item-div\");\n        itemDiv.innerHTML = `\r\n            <h3>${item.name}</h3>\r\n            <p>${item.description}</p>\r\n            <button class='edit-buttons' onclick=\"editMenuItem('${item._id}')\">Uppdatera</button>\r\n            <button class='delete-buttons' onclick=\"deleteMenuItem('${item._id}')\">Ta bort</button>\r\n        `;\n        menuDiv.appendChild(itemDiv);\n    });\n}\nfunction $89fbbdbcfc71305c$var$editMenuItem(id) {\n    const token = localStorage.getItem(\"token\");\n    fetch(`https://backend-yzf1.onrender.com/api/menu/${id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }).then((response)=>{\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        return response.json();\n    }).then((item)=>{\n        // Ta bort tidigare uppdateringsformulär om det finns\n        const existingForm = document.getElementById(`editForm-${item._id}`);\n        if (existingForm) existingForm.remove();\n        // Skapa ett nytt formulär\n        const editForm = document.createElement(\"form\");\n        editForm.id = `editForm-${item._id}`;\n        editForm.innerHTML = `\r\n            <label for=\"name-${item._id}\">Namn:</label>\r\n            <input type=\"text\" id=\"name-${item._id}\" value=\"${item.name}\" required>\r\n            <label for=\"description-${item._id}\">Beskrivning:</label>\r\n            <input type=\"text\" id=\"description-${item._id}\" value=\"${item.description}\" required>\r\n            <label for=\"category-${item._id}\">Kategori:</label>\r\n            <input type=\"text\" id=\"category-${item._id}\" value=\"${item.category}\" required>\r\n            <button type=\"submit\">Spara</button>\r\n            <button type=\"button\" onclick=\"cancelEdit('${item._id}')\">Avbryt</button>\r\n        `;\n        // Lägg till en event listener för att hantera formulärsubmits\n        editForm.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            const updatedName = document.getElementById(`name-${item._id}`).value;\n            const updatedDescription = document.getElementById(`description-${item._id}`).value;\n            const updatedCategory = document.getElementById(`category-${item._id}`).value;\n            const updatedItem = {\n                name: updatedName,\n                description: updatedDescription,\n                category: updatedCategory\n            };\n            const response = await fetch(`https://backend-yzf1.onrender.com/api/menu/${item._id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(updatedItem)\n            });\n            if (response.ok) {\n                $89fbbdbcfc71305c$var$fetchMenuItems(token); // Uppdatera menyn efter ändringen\n                $89fbbdbcfc71305c$var$showNotification(menuId ? \"Menyalternativet har uppdaterats!\" : \"Nytt menyalternativ har lagts till!\");\n            } else {\n                $89fbbdbcfc71305c$var$showNotification(\"N\\xe5got gick fel, f\\xf6rs\\xf6k igen!\", false);\n                console.error(\"Failed to update menu item:\", response.status);\n            }\n        });\n        // Hämta elementet för menyalternativet och lägg till formuläret under det\n        const itemDiv = document.getElementById(`menuItem-${item._id}`);\n        itemDiv.appendChild(editForm);\n    }).catch((error)=>console.error(\"Failed to fetch menu item:\", error));\n}\nfunction $89fbbdbcfc71305c$var$cancelEdit(id) {\n    const editForm = document.getElementById(`editForm-${id}`);\n    if (editForm) editForm.remove(); // Ta bort formuläret om användaren avbryter redigeringen\n}\nasync function $89fbbdbcfc71305c$var$deleteMenuItem(id) {\n    if (confirm(\"\\xc4r du s\\xe4ker p\\xe5 att du vill ta bort denna menyartikel?\")) {\n        const token = localStorage.getItem(\"token\");\n        const response = await fetch(`https://backend-yzf1.onrender.com/api/menu/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        if (response.ok) {\n            $89fbbdbcfc71305c$var$fetchMenuItems(token);\n            $89fbbdbcfc71305c$var$showNotification(\"Menu item deleted successfully!\");\n        } else console.error(\"Failed to delete menu item:\", response.status);\n    }\n}\nasync function $89fbbdbcfc71305c$var$fetchBookings(token) {\n    const response = await fetch(\"https://backend-yzf1.onrender.com/api/bookings\", {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (response.ok) {\n        const bookings = await response.json();\n        $89fbbdbcfc71305c$var$renderBookings(bookings);\n    } else console.error(\"Failed to fetch bookings:\", response.status);\n}\nfunction $89fbbdbcfc71305c$var$renderBookings(bookings) {\n    const bookingsDiv = document.getElementById(\"bookings\");\n    bookingsDiv.innerHTML = \"\";\n    bookings.forEach((booking)=>{\n        const bookingDiv = document.createElement(\"div\");\n        bookingDiv.classList.add(\"booking-item-div\");\n        bookingDiv.id = `booking-${booking._id}`;\n        const bookingDate = new Date(booking.date).toLocaleDateString(\"sv-SE\");\n        bookingDiv.innerHTML = `\r\n            <h3>Bokning f\\xf6r ${booking.name}</h3>\r\n            <p>E-mail: ${booking.email}</p>\r\n            <p>Phone: ${booking.phone}</p>\r\n            <p>Datum: ${bookingDate}</p>\r\n            <p>Tid: ${booking.time}</p>\r\n            <p>G\\xe4ster: ${booking.guests}</p>\r\n            <p>Speciella \\xf6nskem\\xe5l: ${booking.specialRequests}</p>\r\n             <button class='edit-buttons' onclick=\"editBooking('${booking._id}')\">Uppdatera</button>\r\n            <button class='delete-buttons' onclick=\"deleteBooking('${booking._id}')\">Ta bort</button>\r\n        `;\n        bookingsDiv.appendChild(bookingDiv);\n    });\n}\nfunction $89fbbdbcfc71305c$var$editBooking(id) {\n    const token = localStorage.getItem(\"token\");\n    fetch(`https://backend-yzf1.onrender.com/bookings/${id}`, {\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }).then((response)=>{\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        return response.json();\n    }).then((booking)=>{\n        // Ta bort tidigare uppdateringsformulär om det finns\n        const existingForm = document.getElementById(`editBookingForm-${booking._id}`);\n        if (existingForm) existingForm.remove();\n        // Skapa ett nytt formulär\n        const editForm = document.createElement(\"form\");\n        editForm.id = `editBookingForm-${booking._id}`;\n        editForm.innerHTML = `\r\n            <label for=\"bookingName-${booking._id}\">Namn:</label>\r\n            <input type=\"text\" id=\"bookingName-${booking._id}\" value=\"${booking.name}\" required>\r\n            <label for=\"bookingPhone-${booking._id}\">Telefon:</label>\r\n            <input type=\"text\" id=\"bookingPhone-${booking._id}\" value=\"${booking.phone}\" required>\r\n            <label for=\"bookingEmail-${booking._id}\">Email:</label>\r\n            <input type=\"email\" id=\"bookingEmail-${booking._id}\" value=\"${booking.email}\" required>\r\n            <label for=\"bookingDate-${booking._id}\">Datum:</label>\r\n            <input type=\"date\" id=\"bookingDate-${booking._id}\" value=\"${booking.date}\" required>\r\n            <label for=\"bookingTime-${booking._id}\">Tid:</label>\r\n            <input type=\"time\" id=\"bookingTime-${booking._id}\" value=\"${booking.time}\" required>\r\n            <label for=\"bookingGuests-${booking._id}\">G\\xe4ster:</label>\r\n            <input type=\"number\" id=\"bookingGuests-${booking._id}\" value=\"${booking.guests}\" required>\r\n            <label for=\"bookingSpecialRequests-${booking._id}\">Speciella \\xf6nskem\\xe5l:</label>\r\n            <textarea id=\"bookingSpecialRequests-${booking._id}\" required>${booking.specialRequests}</textarea>\r\n            <button type=\"submit\">Spara</button>\r\n            <button type=\"button\" onclick=\"cancelBookingEdit('${booking._id}')\">Avbryt</button>\r\n        `;\n        // Lägg till en event listener för att hantera formulärsubmits\n        editForm.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            const updatedName = document.getElementById(`bookingName-${booking._id}`).value;\n            const updatedPhone = document.getElementById(`bookingPhone-${booking._id}`).value;\n            const updatedEmail = document.getElementById(`bookingEmail-${booking._id}`).value;\n            const updatedDate = document.getElementById(`bookingDate-${booking._id}`).value;\n            const updatedTime = document.getElementById(`bookingTime-${booking._id}`).value;\n            const updatedGuests = document.getElementById(`bookingGuests-${booking._id}`).value;\n            const updatedSpecialRequests = document.getElementById(`bookingSpecialRequests-${booking._id}`).value;\n            const updatedBooking = {\n                name: updatedName,\n                phone: updatedPhone,\n                email: updatedEmail,\n                date: updatedDate,\n                time: updatedTime,\n                guests: updatedGuests,\n                specialRequests: updatedSpecialRequests\n            };\n            const response = await fetch(`https://backend-yzf1.onrender.com/api/bookings/${booking._id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(updatedBooking)\n            });\n            if (response.ok) {\n                $89fbbdbcfc71305c$var$fetchBookings(token); // Uppdatera listan med bokningar efter ändringen\n                $89fbbdbcfc71305c$var$showNotification(\"Booking updated successfully!\");\n            } else {\n                $89fbbdbcfc71305c$var$showNotification(\"N\\xe5got gick fel. F\\xf6rs\\xf6k igen.\", false);\n                console.error(\"Failed to update booking:\", response.status);\n            }\n        });\n        // Hämta elementet för bokningen och lägg till formuläret under det\n        const bookingDiv = document.getElementById(`booking-${booking._id}`);\n        bookingDiv.appendChild(editForm);\n    }).catch((error)=>console.error(\"Failed to fetch booking:\", error));\n}\nfunction $89fbbdbcfc71305c$var$cancelBookingEdit(id) {\n    const editForm = document.getElementById(`editBookingForm-${id}`);\n    if (editForm) editForm.remove(); // Ta bort formuläret om användaren avbryter redigeringen\n}\nasync function $89fbbdbcfc71305c$var$deleteBooking(id) {\n    if (confirm(\"\\xc4r du s\\xe4ker p\\xe5 att du vill ta bort denna bokning?\")) {\n        const token = localStorage.getItem(\"token\");\n        const response = await fetch(`https://backend-yzf1.onrender.com/api/bookings/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            }\n        });\n        if (response.ok) {\n            $89fbbdbcfc71305c$var$fetchBookings(token); // Uppdatera listan med bokningar efter radering\n            $89fbbdbcfc71305c$var$showNotification(`Booking deleted successfully!`);\n        } else console.error(\"Failed to delete booking:\", response.status);\n    }\n}\nfunction $89fbbdbcfc71305c$var$showNotification(message, isSuccess = true) {\n    const notificationDiv = document.getElementById(\"notification\");\n    notificationDiv.style.backgroundColor = isSuccess ? \"#4CAF50\" : \"#f44336\"; // Grön för framgång, röd för fel\n    notificationDiv.textContent = message;\n    notificationDiv.style.display = \"block\";\n    setTimeout(()=>{\n        notificationDiv.style.display = \"none\";\n    }, 3000); // Visar meddelandet i 3 sekunder\n}\n\n\n//# sourceMappingURL=admin.aeac2601.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(token);\r\n    if (!token) {\r\n        window.location.href = '/login.html';\r\n    }\r\n\r\n    fetchMenuItems(token);\r\n    fetchBookings(token);\r\n\r\n    document.getElementById('logoutButton').addEventListener('click', () => {\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login.html';\r\n    });\r\n});\r\n\r\n\r\n\r\n    document.getElementById('addNewItemButton').addEventListener('click', () => {\r\n        document.getElementById('menuFormContainer').style.display = 'block';\r\n        document.getElementById('menuForm').reset();\r\n        document.getElementById('menuId').value = '';\r\n    });\r\n    document.getElementById('addNewBookingButton').addEventListener('click', () => {\r\n        document.getElementById('bookingFormContainer').style.display = 'block';\r\n        document.getElementById('bookingForm').reset();\r\n        document.getElementById('bookingId').value = '';  // Se till att bookingId sätts till ett tomt värde\r\n    });\r\n\r\n    document.getElementById('menuForm').addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n        const menuId = document.getElementById('menuId').value;\r\n        const name = document.getElementById('name').value;\r\n        const description = document.getElementById('description').value;\r\n        const category = document.getElementById('category').value;\r\n        const token = localStorage.getItem('token');\r\n\r\n        const menuItem = { name, description, category };\r\n\r\n        let url = 'https://backend-yzf1.onrender.com/api/menu';\r\n        let method = 'POST';\r\n\r\n        if (menuId) {\r\n            url += `/${menuId}`;\r\n            method = 'PUT';\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(menuItem)\r\n        });\r\n\r\n        if (response.ok) {\r\n            fetchMenuItems(token);\r\n            document.getElementById('menuFormContainer').style.display = 'none';\r\n            showNotification(menuId ? `${name} har uppdaterats!` : `${name} har lagts till!`);\r\n        } else {\r\n            console.error('Failed to save menu item:', response.status);\r\n        }\r\n    });\r\n\r\n    document.getElementById('bookingForm').addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n        const bookingId = document.getElementById('bookingId').value;\r\n        const name = document.getElementById('bookingName').value;\r\n        const phone = document.getElementById('bookingPhone').value;\r\n        const email = document.getElementById('bookingEmail').value;\r\n        const date = document.getElementById('bookingDate').value;\r\n        const time = document.getElementById('bookingTime').value;\r\n        const guests = document.getElementById('bookingGuests').value;\r\n        const specialRequests = document.getElementById('bookingSpecialRequests').value;\r\n        const token = localStorage.getItem('token');\r\n       \r\n\r\n        //Kombinerar datum och tid för att konvertera till ISO 1601-format som databasen har för att kunna skapa bokningar frn gränssnittet\r\n        const datetime = new Date(`${date}T${time}:00Z`).toISOString();\r\n        console.log(datetime);\r\n        const booking = { name, phone, email, date:datetime, time, guests, specialRequests };\r\n        console.log(booking);\r\n\r\n        let url = 'https://backend-yzf1.onrender.com/api/bookings';\r\n        let method = 'POST';\r\n\r\n        if (bookingId) {\r\n            url += `/${bookingId}`;\r\n            method = 'PUT';\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(booking)\r\n        });\r\n\r\n        if (response.ok) {\r\n            fetchBookings(token);\r\n            document.getElementById('bookingFormContainer').style.display = 'none';\r\n            showNotification(bookingId ? 'Booking updated successfully!' : 'New booking added!');\r\n        } else {\r\n            const errorData = await response.json();\r\n            console.error('Failed to save booking:', response.status);\r\n            console.error('Error details:', errorData);\r\n     \r\n        }\r\n    });\r\n\r\n    document.getElementById('cancelButton').addEventListener('click', () => {\r\n        document.getElementById('menuFormContainer').style.display = 'none';\r\n    });\r\n    document.getElementById('cancelBookingButton').addEventListener('click', () => {\r\n        document.getElementById('bookingFormContainer').style.display = 'none';\r\n    });\r\n\r\n\r\n\r\n\r\nasync function fetchMenuItems(token) {\r\n    const response = await fetch('https://backend-yzf1.onrender.com/api/menu', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    if (response.ok) {\r\n        const menuItems = await response.json();\r\n        renderMenuItems(menuItems);\r\n    } else {\r\n        console.error('Failed to fetch menu items:', response.status);\r\n    }\r\n}\r\n\r\nfunction renderMenuItems(menuItems) {\r\n    const menuDiv = document.getElementById('menuItems');\r\n    menuDiv.innerHTML = '';\r\n    menuItems.forEach(item => {\r\n        const itemDiv = document.createElement('div');\r\n        itemDiv.id = `menuItem-${item._id}`;  // Unikt ID för varje menyalternativ\r\n        itemDiv.classList.add('menu-item-div');\r\n        itemDiv.innerHTML = `\r\n            <h3>${item.name}</h3>\r\n            <p>${item.description}</p>\r\n            <button class='edit-buttons' onclick=\"editMenuItem('${item._id}')\">Uppdatera</button>\r\n            <button class='delete-buttons' onclick=\"deleteMenuItem('${item._id}')\">Ta bort</button>\r\n        `;\r\n        menuDiv.appendChild(itemDiv);\r\n    });\r\n}\r\n\r\nfunction editMenuItem(id) {\r\n    const token = localStorage.getItem('token');\r\n    fetch(`https://backend-yzf1.onrender.com/api/menu/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(item => {\r\n        // Ta bort tidigare uppdateringsformulär om det finns\r\n        const existingForm = document.getElementById(`editForm-${item._id}`);\r\n        if (existingForm) {\r\n            existingForm.remove();\r\n        }\r\n\r\n        // Skapa ett nytt formulär\r\n        const editForm = document.createElement('form');\r\n        editForm.id = `editForm-${item._id}`;\r\n        editForm.innerHTML = `\r\n            <label for=\"name-${item._id}\">Namn:</label>\r\n            <input type=\"text\" id=\"name-${item._id}\" value=\"${item.name}\" required>\r\n            <label for=\"description-${item._id}\">Beskrivning:</label>\r\n            <input type=\"text\" id=\"description-${item._id}\" value=\"${item.description}\" required>\r\n            <label for=\"category-${item._id}\">Kategori:</label>\r\n            <input type=\"text\" id=\"category-${item._id}\" value=\"${item.category}\" required>\r\n            <button type=\"submit\">Spara</button>\r\n            <button type=\"button\" onclick=\"cancelEdit('${item._id}')\">Avbryt</button>\r\n        `;\r\n\r\n        // Lägg till en event listener för att hantera formulärsubmits\r\n        editForm.addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            const updatedName = document.getElementById(`name-${item._id}`).value;\r\n            const updatedDescription = document.getElementById(`description-${item._id}`).value;\r\n            const updatedCategory = document.getElementById(`category-${item._id}`).value;\r\n\r\n            const updatedItem = { name: updatedName, description: updatedDescription, category: updatedCategory };\r\n\r\n            const response = await fetch(`https://backend-yzf1.onrender.com/api/menu/${item._id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updatedItem)\r\n            });\r\n\r\n            if (response.ok) {\r\n                fetchMenuItems(token);  // Uppdatera menyn efter ändringen\r\n                showNotification(menuId ? 'Menyalternativet har uppdaterats!' : 'Nytt menyalternativ har lagts till!');\r\n            } else {\r\n                showNotification('Något gick fel, försök igen!', false);\r\n                console.error('Failed to update menu item:', response.status);\r\n            }\r\n        });\r\n\r\n        // Hämta elementet för menyalternativet och lägg till formuläret under det\r\n        const itemDiv = document.getElementById(`menuItem-${item._id}`);\r\n        itemDiv.appendChild(editForm);\r\n    })\r\n    .catch(error => console.error('Failed to fetch menu item:', error));\r\n}\r\n\r\nfunction cancelEdit(id) {\r\n    const editForm = document.getElementById(`editForm-${id}`);\r\n    if (editForm) {\r\n        editForm.remove();  // Ta bort formuläret om användaren avbryter redigeringen\r\n    }\r\n}\r\nasync function deleteMenuItem(id) {\r\n    if (confirm('Är du säker på att du vill ta bort denna menyartikel?')) {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`https://backend-yzf1.onrender.com/api/menu/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            fetchMenuItems(token);\r\n            showNotification('Menu item deleted successfully!');\r\n\r\n\r\n        } else {\r\n            console.error('Failed to delete menu item:', response.status);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nasync function fetchBookings(token) {\r\n    const response = await fetch('https://backend-yzf1.onrender.com/api/bookings', {\r\n        method: 'GET',\r\n        headers: { \r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    if (response.ok) {\r\n        const bookings = await response.json();\r\n        renderBookings(bookings);\r\n    } else {\r\n        console.error('Failed to fetch bookings:', response.status);\r\n    }\r\n}\r\n\r\nfunction renderBookings(bookings) {\r\n    const bookingsDiv = document.getElementById('bookings');\r\n    bookingsDiv.innerHTML = '';\r\n    bookings.forEach(booking => {\r\n        const bookingDiv = document.createElement('div');\r\n        bookingDiv.classList.add('booking-item-div');\r\n        bookingDiv.id = `booking-${booking._id}`;\r\n        const bookingDate = new Date(booking.date).toLocaleDateString('sv-SE');\r\n        bookingDiv.innerHTML = `\r\n            <h3>Bokning för ${booking.name}</h3>\r\n            <p>E-mail: ${booking.email}</p>\r\n            <p>Phone: ${booking.phone}</p>\r\n            <p>Datum: ${bookingDate}</p>\r\n            <p>Tid: ${booking.time}</p>\r\n            <p>Gäster: ${booking.guests}</p>\r\n            <p>Speciella önskemål: ${booking.specialRequests}</p>\r\n             <button class='edit-buttons' onclick=\"editBooking('${booking._id}')\">Uppdatera</button>\r\n            <button class='delete-buttons' onclick=\"deleteBooking('${booking._id}')\">Ta bort</button>\r\n        `;\r\n        bookingsDiv.appendChild(bookingDiv);\r\n    });\r\n}\r\n\r\n\r\nfunction editBooking(id) {\r\n    const token = localStorage.getItem('token');\r\n    fetch(`https://backend-yzf1.onrender.com/bookings/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(booking => {\r\n        // Ta bort tidigare uppdateringsformulär om det finns\r\n        const existingForm = document.getElementById(`editBookingForm-${booking._id}`);\r\n        if (existingForm) {\r\n            existingForm.remove();\r\n        }\r\n\r\n        // Skapa ett nytt formulär\r\n        const editForm = document.createElement('form');\r\n        editForm.id = `editBookingForm-${booking._id}`;\r\n        editForm.innerHTML = `\r\n            <label for=\"bookingName-${booking._id}\">Namn:</label>\r\n            <input type=\"text\" id=\"bookingName-${booking._id}\" value=\"${booking.name}\" required>\r\n            <label for=\"bookingPhone-${booking._id}\">Telefon:</label>\r\n            <input type=\"text\" id=\"bookingPhone-${booking._id}\" value=\"${booking.phone}\" required>\r\n            <label for=\"bookingEmail-${booking._id}\">Email:</label>\r\n            <input type=\"email\" id=\"bookingEmail-${booking._id}\" value=\"${booking.email}\" required>\r\n            <label for=\"bookingDate-${booking._id}\">Datum:</label>\r\n            <input type=\"date\" id=\"bookingDate-${booking._id}\" value=\"${booking.date}\" required>\r\n            <label for=\"bookingTime-${booking._id}\">Tid:</label>\r\n            <input type=\"time\" id=\"bookingTime-${booking._id}\" value=\"${booking.time}\" required>\r\n            <label for=\"bookingGuests-${booking._id}\">Gäster:</label>\r\n            <input type=\"number\" id=\"bookingGuests-${booking._id}\" value=\"${booking.guests}\" required>\r\n            <label for=\"bookingSpecialRequests-${booking._id}\">Speciella önskemål:</label>\r\n            <textarea id=\"bookingSpecialRequests-${booking._id}\" required>${booking.specialRequests}</textarea>\r\n            <button type=\"submit\">Spara</button>\r\n            <button type=\"button\" onclick=\"cancelBookingEdit('${booking._id}')\">Avbryt</button>\r\n        `;\r\n\r\n        // Lägg till en event listener för att hantera formulärsubmits\r\n        editForm.addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            const updatedName = document.getElementById(`bookingName-${booking._id}`).value;\r\n            const updatedPhone = document.getElementById(`bookingPhone-${booking._id}`).value;\r\n            const updatedEmail = document.getElementById(`bookingEmail-${booking._id}`).value;\r\n            const updatedDate = document.getElementById(`bookingDate-${booking._id}`).value;\r\n            const updatedTime = document.getElementById(`bookingTime-${booking._id}`).value;\r\n            const updatedGuests = document.getElementById(`bookingGuests-${booking._id}`).value;\r\n            const updatedSpecialRequests = document.getElementById(`bookingSpecialRequests-${booking._id}`).value;\r\n\r\n            const updatedBooking = {\r\n                name: updatedName,\r\n                phone: updatedPhone,\r\n                email: updatedEmail,\r\n                date: updatedDate,\r\n                time: updatedTime,\r\n                guests: updatedGuests,\r\n                specialRequests: updatedSpecialRequests\r\n            };\r\n\r\n            const response = await fetch(`https://backend-yzf1.onrender.com/api/bookings/${booking._id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updatedBooking)\r\n            });\r\n\r\n            if (response.ok) {\r\n                fetchBookings(token);  // Uppdatera listan med bokningar efter ändringen\r\n                showNotification('Booking updated successfully!');\r\n            } else {\r\n                showNotification('Något gick fel. Försök igen.', false);\r\n                console.error('Failed to update booking:', response.status);\r\n            }\r\n        });\r\n\r\n        // Hämta elementet för bokningen och lägg till formuläret under det\r\n        const bookingDiv = document.getElementById(`booking-${booking._id}`);\r\n        bookingDiv.appendChild(editForm);\r\n    })\r\n    .catch(error => console.error('Failed to fetch booking:', error));\r\n}\r\n\r\nfunction cancelBookingEdit(id) {\r\n    const editForm = document.getElementById(`editBookingForm-${id}`);\r\n    if (editForm) {\r\n        editForm.remove();  // Ta bort formuläret om användaren avbryter redigeringen\r\n    }\r\n}\r\n\r\nasync function deleteBooking(id) {\r\n    if (confirm('Är du säker på att du vill ta bort denna bokning?')) {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`https://backend-yzf1.onrender.com/api/bookings/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if (response.ok) {\r\n            fetchBookings(token);  // Uppdatera listan med bokningar efter radering\r\n            showNotification(`Booking deleted successfully!`);\r\n        } else {\r\n            console.error('Failed to delete booking:', response.status);\r\n        }\r\n    }\r\n}\r\n\r\nfunction showNotification(message, isSuccess = true) {\r\n    const notificationDiv = document.getElementById('notification');\r\n    notificationDiv.style.backgroundColor = isSuccess ? '#4CAF50' : '#f44336'; // Grön för framgång, röd för fel\r\n    notificationDiv.textContent = message;\r\n    notificationDiv.style.display = 'block';\r\n    \r\n    setTimeout(() => {\r\n        notificationDiv.style.display = 'none';\r\n    }, 3000); // Visar meddelandet i 3 sekunder\r\n}"],"names":["$89fbbdbcfc71305c$var$fetchMenuItems","token","response","fetch","method","headers","ok","$89fbbdbcfc71305c$var$renderMenuItems","menuItems","menuDiv","document","getElementById","innerHTML","forEach","item","itemDiv","createElement","id","_id","classList","add","name","description","appendChild","json","console","error","status","$89fbbdbcfc71305c$var$fetchBookings","$89fbbdbcfc71305c$var$renderBookings","bookings","bookingsDiv","booking","bookingDiv","bookingDate","Date","date","toLocaleDateString","email","phone","time","guests","specialRequests","$89fbbdbcfc71305c$var$showNotification","message","isSuccess","notificationDiv","style","backgroundColor","textContent","display","setTimeout","addEventListener","localStorage","getItem","log","window","location","href","removeItem","reset","value","e","preventDefault","menuId1","category","url","body","JSON","stringify","bookingId","datetime","toISOString","errorData"],"version":3,"file":"admin.aeac2601.js.map"}